# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine: true
    image: ubuntu-1604:201903-01

    working_directory: ~/scalardl-web-client-sdk

    steps:
      - checkout
      # Restore dependencies
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}

      - run:
          name: Docker login
          command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

      - run:
          name: Spin container via docker compose
          command: docker-compose up -d
          working_directory: .circleci/

      - run:
          name: Debug docker ps
          command: docker ps && sudo netstat

      - run:
          name: Install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
            && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
            && sudo rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      #      - run:
      #          name: Wait for cassandra
      #          command: dockerize -wait tcp://cassandra:9042 -timeout 1m
      #      - run:
      #          name: Wait for Scalardl
      #          command: dockerize -wait tcp://127.0.0.1:50051 -timeout 1m

      - run:
          name: Copy cqlsh
          command: docker cp ./create_schema.cql cassandra:/create_schema.cql
          working_directory: .circleci/

      - run:
          name: List all listening port
          command: netstat -lntp

      - run:
          name: Install n
          command: sudo npm install n -g

      - run:
          name: Update node version
          command: sudo n 10.15.3

      - run:
          name: Install Dependencies
          command: npm install

      - run:
          name: Execute cqlsh
          command: docker exec cassandra cqlsh -f /create_schema.cql

      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      # run tests
      - run:
          command: node -v && npm test
          environment:
            MOCHA_FILE: "~/scalardl-web-client-sdk/mochawesome-report/mochawesome.html"
          when: always

      - store_test_results:
          path: ~/scalardl-web-client-sdk/mochawesome-report

      - store_artifacts:
          path: ~/scalardl-web-client-sdk/mochawesome-report
